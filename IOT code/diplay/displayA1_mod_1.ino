#include <ESP8266WiFi.h>

#include <ESP8266WebServer.h>
#include <WiFiManager.h>

#include <Arduino.h>
#include <ESP8266WiFiMulti.h>
#include <ESP8266HTTPClient.h>

#include <WiFiClient.h>

ESP8266WiFiMulti WiFiMulti;

#include <ESP8266WiFi.h>
#include <DNSServer.h>
#include <ESP8266WebServer.h>
#include <WiFiManager.h>
#include <WiFiUdp.h>
#include <Time.h>
// ntp time
int dst = 0; //กำหนดค่า Date Swing Time
int timezone = 7 * 3600; //ตั้งค่า TimeZone ตามเวลาประเทศไทย
const String month_name[12] = {"01","02","03","04","05","06","07","08","09","10","11","12"};


// send-get data from firebase statuse

String list_data_string[6]; //feed  ,w-level  , w-quality ,temp ,pump-status ,auto
String power;
String gettemp;
String getfeed;
String getlevel;
String getquality;
String getauto;
String getpump;
String gettext;
String sumr;
String sumg;
String sumb;

String timer_date;

const String datax;
  String data_list[5];

// display
#include "SPI.h"
#include "Adafruit_GFX.h"
#include "Adafruit_ILI9341.h"
#define TFT_DC D4
#define TFT_CS D8
Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC);
#define TFT_BLACK       0x0000      /*   0,   0,   0 */
#define TFT_NAVY        0x000F      /*   0,   0, 128 */
#define TFT_LIGHTGREY   0xD69A      /* 211, 211, 211 */
#define TFT_DARKGREY    0x7BEF      /* 128, 128, 128 */
#define TFT_BLUE        0x001F      /*   0,   0, 255 */
#define TFT_GREEN       0x07E0      /*   0, 255,   0 */
#define TFT_RED         0xF800      /* 255,   0,   0 */
#define TFT_YELLOW      0xFFE0      /* 255, 255,   0 */
#define TFT_WHITE       0xFFFF      /* 255, 255, 255 */
#define TFT_ORANGE      0xE3E3      /* 255, 180,   0 */ //   0xFDA0

#define TFT_SKYBLUE   0x867D      /* 135, 206, 235 */
#define TFT_pump      0x3F3F      /* 192, 192, 192 */
#define TFT_fan       0x2F2F      /* 192, 192, 192 */
#define TFT_light     0xE5E5      /* 192, 192, 192 */

#include <XPT2046_Touchscreen.h>
#include <SPI.h>
#define CS_PIN  D3
#define TIRQ_PIN  D9
XPT2046_Touchscreen ts(CS_PIN, TIRQ_PIN);  // Param 2 - Touch IRQ Pin - interrupt enabled polling

// display val
int num = 0;
int px;
int py;
String vol;



String power_send;

const char* ssid     = "DESKTOP-9GRKCEU"; //NAYNE //Kanokwan  //DESKTOP-9GRKCEU 
const char* password = "b348@77S"; //nayne38657 //Frogs2512 //b348@77S

//const char* host = "172.20.10.4";  //172.20.10.4 //192.168.1.100 //192.168.137.1

const char* host = "192.168.137.1"; 
#define WIFI_SSID "DESKTOP-9GRKCEU" 
#define WIFI_PASSWORD "b348@77S"

#define YT_BMPWIDTH  40
#define YT_BMPHEIGHT 40
const unsigned char bitmap_fan[] PROGMEM = {
  0x00, 0x00, 0x01, 0xff, 0xfc, 0x00, 0x00, 0x07, 0xff, 0xfc, 0x00, 0x00, 0x7f, 0x38, 0x1c, 0x00, 
  0x00, 0xfc, 0x30, 0x1c, 0x00, 0x00, 0x78, 0x30, 0x1c, 0x00, 0x00, 0x60, 0x31, 0x9c, 0x00, 0x00, 
  0x60, 0x31, 0x9c, 0x00, 0x0c, 0x60, 0x31, 0x9c, 0x00, 0x0c, 0x60, 0x31, 0x9c, 0x00, 0x00, 0x60, 
  0x30, 0x1c, 0x01, 0xc0, 0xfc, 0x30, 0x1c, 0x01, 0x80, 0x7f, 0x30, 0x1c, 0x00, 0x00, 0x0f, 0xff, 
  0xfc, 0x00, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 
  0xff, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xf8, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 
  0x00, 0x00, 0x18, 0x39, 0xf0, 0x7e, 0x0f, 0x9c, 0x3f, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0x1f, 0xe7, 
  0xf8, 0xfc, 0x38, 0x00, 0x00, 0x00, 0x1c, 0x18, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30, 0x3c, 0x00, 
  0x18, 0x1c, 0x70, 0xff, 0xf0, 0x38, 0x1c, 0x21, 0xff, 0xf0, 0x38, 0x0c, 0x03, 0xc0, 0x70, 0x30, 
  0x0e, 0x03, 0xc3, 0xf0, 0x70, 0x07, 0x00, 0xff, 0xf0, 0xe0, 0x07, 0x00, 0x7f, 0x30, 0xe0, 0x03, 
  0x80, 0x00, 0x01, 0xc0, 0x01, 0xc0, 0x00, 0x03, 0x80, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x00, 0x7f, 
  0xff, 0xfe, 0x00, 0x00, 0x3f, 0xff, 0xfc, 0x00
};
#define YT_BMPWIDTH  50
#define YT_BMPHEIGHT 50
const unsigned char bitmap_light[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x00, 0x00, 
  0x00, 0x01, 0xfe, 0x7f, 0xc0, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x3f, 0xe0, 0x00, 0x00, 0x00, 0x07, 
  0xe3, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xc7, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x0f, 0x8f, 0xff, 
  0xf8, 0x00, 0x00, 0x00, 0x0f, 0x9f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0x3f, 0xff, 0xf8, 0x00, 
  0x00, 0x00, 0x0f, 0x3f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0x3f, 0xff, 0xf8, 0x00, 0x00, 0x00, 
  0x0f, 0x3f, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xff, 
  0xff, 0xf8, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 
  0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 
  0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 
  0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x00, 0x00, 0x00
};

#define YT_BMPWIDTH  50
#define YT_BMPHEIGHT 50
const unsigned char bitmap_app[] PROGMEM = {
  0x00, 0x0f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x30, 
  0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 
  0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 
  0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 
  0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 
  0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x63, 0xf0, 0x03, 0xf1, 
  0x80, 0x00, 0x00, 0x67, 0xf0, 0x03, 0xf9, 0x80, 0x00, 0x00, 0x66, 0x00, 0x00, 0x19, 0x80, 0x00, 
  0x00, 0x66, 0x00, 0x00, 0x19, 0x80, 0x00, 0x00, 0x66, 0x7f, 0x38, 0x19, 0x80, 0x00, 0x00, 0x66, 
  0xc1, 0x20, 0x19, 0x80, 0x00, 0x00, 0x66, 0xc1, 0x23, 0x19, 0x80, 0x00, 0x00, 0x60, 0x5d, 0x06, 
  0x01, 0x80, 0x00, 0x00, 0x60, 0x41, 0x0c, 0xc1, 0x80, 0x00, 0x00, 0x60, 0xc0, 0x08, 0xc1, 0x80, 
  0x00, 0x00, 0x60, 0x7c, 0x03, 0xc1, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 
  0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x7f, 0x3f, 0xc1, 0x80, 0x00, 0x00, 0x60, 0xc1, 
  0x20, 0xc1, 0x80, 0x00, 0x00, 0x60, 0x41, 0x20, 0xc1, 0x80, 0x00, 0x00, 0x60, 0x59, 0x26, 0xc1, 
  0x80, 0x00, 0x00, 0x66, 0x41, 0x20, 0xd9, 0x80, 0x00, 0x00, 0x66, 0x41, 0x00, 0xd9, 0x80, 0x00, 
  0x00, 0x66, 0x7f, 0x0f, 0xd9, 0x80, 0x00, 0x00, 0x66, 0x00, 0x00, 0x19, 0x80, 0x00, 0x00, 0x66, 
  0x00, 0x00, 0x19, 0x80, 0x00, 0x00, 0x67, 0xf0, 0x03, 0xf9, 0x80, 0x00, 0x00, 0x63, 0xf0, 0x03, 
  0xf1, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 
  0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 
  0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 
  0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 
  0x80, 0x00, 0x00, 0x60, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x20, 0x00, 0x00, 0x01, 0x00, 0x00, 
  0x00, 0x38, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xfe, 0x00, 0x00
};



#define YT_BMPWIDTH  210
#define YT_BMPHEIGHT 208
const unsigned char bitmap_QR[] PROGMEM = {
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 
  0x7f, 0xff, 0x07, 0xc0, 0x0f, 0x83, 0xff, 0xff, 0xff, 0x07, 0xc1, 0xff, 0x83, 0xe0, 0xf8, 0x00, 
  0x00, 0x00, 0x01, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x07, 0xc0, 0x0f, 
  0x83, 0xff, 0xff, 0xff, 0x07, 0xc1, 0xff, 0x83, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 
  0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x07, 0xc0, 0x0f, 0x83, 0xff, 0xff, 0xff, 0x07, 
  0xc1, 0xff, 0x83, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 
  0x00, 0x7f, 0xff, 0x07, 0xc0, 0x0f, 0x83, 0xff, 0xff, 0xff, 0x07, 0xc1, 0xff, 0x83, 0xe0, 0xf8, 
  0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x07, 0xc0, 
  0x0f, 0x83, 0xff, 0xff, 0xff, 0x07, 0xc1, 0xff, 0x83, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 
  0xc0, 0xff, 0xfc, 0x0f, 0xff, 0xff, 0xf0, 0x7c, 0x1f, 0x07, 0xfe, 0x00, 0x03, 0xff, 0xfc, 0x00, 
  0x00, 0x3e, 0x00, 0x03, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xc0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 
  0xff, 0xf0, 0x7c, 0x1f, 0x07, 0xfe, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x3e, 0x00, 0x03, 0xff, 
  0xf8, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7c, 0x1f, 0x07, 
  0xfe, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x3e, 0x00, 0x03, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xe0, 
  0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7c, 0x1f, 0x07, 0xfe, 0x00, 0x03, 0xff, 0xfc, 
  0x00, 0x00, 0x3e, 0x00, 0x03, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 
  0xff, 0xff, 0xf0, 0x7c, 0x1f, 0x07, 0xfe, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0x3e, 0x00, 0x03, 
  0xff, 0xf8, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7f, 0xff, 
  0xff, 0xc0, 0x0f, 0x83, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3e, 0x00, 0x03, 
  0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7f, 0xff, 0xff, 0xc0, 0x0f, 0x83, 0xff, 
  0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 
  0x1f, 0x00, 0x01, 0xf0, 0x7f, 0xff, 0xff, 0xc0, 0x0f, 0x83, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 
  0xff, 0xff, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7f, 
  0xff, 0xff, 0xc0, 0x0f, 0x83, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3e, 0x00, 
  0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7f, 0xff, 0xff, 0xc0, 0x0f, 0x83, 
  0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0xff, 0xc0, 0xff, 
  0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x00, 0x07, 0xc1, 0xf0, 0x00, 0x00, 0x03, 0xe0, 0x07, 0xfe, 
  0x00, 0x00, 0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 
  0x7c, 0x00, 0x07, 0xc1, 0xf0, 0x00, 0x00, 0x03, 0xe0, 0x07, 0xfe, 0x00, 0x00, 0x00, 0xf8, 0x3e, 
  0x00, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x00, 0x07, 0xc1, 0xf0, 
  0x00, 0x00, 0x03, 0xe0, 0x07, 0xfe, 0x00, 0x00, 0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0xff, 0xc0, 
  0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x00, 0x07, 0xc1, 0xf0, 0x00, 0x00, 0x03, 0xe0, 0x07, 
  0xfe, 0x00, 0x00, 0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 
  0xf0, 0x7c, 0x00, 0x07, 0xc1, 0xf0, 0x00, 0x00, 0x03, 0xe0, 0x07, 0xfe, 0x00, 0x00, 0x00, 0xf8, 
  0x3e, 0x00, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xff, 
  0xff, 0xfc, 0x1f, 0x00, 0x1f, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0xff, 
  0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0x00, 0x1f, 
  0x00, 0x00, 0x0f, 0xfc, 0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 
  0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0x00, 0x1f, 0x00, 0x00, 0x0f, 0xfc, 0x00, 
  0xf8, 0x3e, 0x00, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 
  0xff, 0xff, 0xfc, 0x1f, 0x00, 0x1f, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 
  0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0x00, 
  0x1f, 0x00, 0x00, 0x0f, 0xfc, 0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 
  0xff, 0xff, 0xf0, 0x7c, 0x00, 0xf8, 0x01, 0xff, 0x83, 0xff, 0xff, 0xe0, 0x00, 0x01, 0xf0, 0x00, 
  0x1f, 0xf8, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7c, 0x00, 
  0xf8, 0x01, 0xff, 0x83, 0xff, 0xff, 0xe0, 0x00, 0x01, 0xf0, 0x00, 0x1f, 0xf8, 0x3f, 0xff, 0xff, 
  0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7c, 0x00, 0xf8, 0x01, 0xff, 0x83, 0xff, 
  0xff, 0xe0, 0x00, 0x01, 0xf0, 0x00, 0x1f, 0xf8, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 
  0x1f, 0xff, 0xff, 0xf0, 0x7c, 0x00, 0xf8, 0x01, 0xff, 0x83, 0xff, 0xff, 0xe0, 0x00, 0x01, 0xf0, 
  0x00, 0x1f, 0xf8, 0x3f, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7c, 
  0x00, 0xf8, 0x01, 0xff, 0x83, 0xff, 0xff, 0xe0, 0x00, 0x01, 0xf0, 0x00, 0x1f, 0xf8, 0x3f, 0xff, 
  0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x1f, 0x07, 0xc1, 0xf0, 0x7c, 
  0x1f, 0x03, 0xe0, 0xf8, 0x3e, 0x0f, 0x83, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 
  0xfc, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x1f, 0x07, 0xc1, 0xf0, 0x7c, 0x1f, 0x03, 0xe0, 0xf8, 0x3e, 
  0x0f, 0x83, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 
  0x7c, 0x1f, 0x07, 0xc1, 0xf0, 0x7c, 0x1f, 0x03, 0xe0, 0xf8, 0x3e, 0x0f, 0x83, 0xe0, 0xf8, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x1f, 0x07, 0xc1, 0xf0, 
  0x7c, 0x1f, 0x03, 0xe0, 0xf8, 0x3e, 0x0f, 0x83, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 
  0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x1f, 0x07, 0xc1, 0xf0, 0x7c, 0x1f, 0x03, 0xe0, 0xf8, 
  0x3e, 0x0f, 0x83, 0xe0, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xe0, 0x00, 0x3f, 0xf0, 0x7c, 0x00, 0x03, 0xe0, 0x00, 0x3f, 0xf0, 0x7f, 0xe0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x3f, 
  0xf0, 0x7c, 0x00, 0x03, 0xe0, 0x00, 0x3f, 0xf0, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xf0, 0x7c, 0x00, 0x03, 0xe0, 
  0x00, 0x3f, 0xf0, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xe0, 0x00, 0x3f, 0xf0, 0x7c, 0x00, 0x03, 0xe0, 0x00, 0x3f, 0xf0, 0x7f, 0xe0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 
  0x3f, 0xf0, 0x7c, 0x00, 0x03, 0xe0, 0x00, 0x3f, 0xf0, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0xf8, 0x3f, 0xff, 0x83, 0xff, 0x03, 
  0xe0, 0xf8, 0x3e, 0x00, 0x00, 0x1f, 0x07, 0xc1, 0xf0, 0x7c, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 
  0x00, 0x01, 0xf0, 0x00, 0x00, 0xf8, 0x3f, 0xff, 0x83, 0xff, 0x03, 0xe0, 0xf8, 0x3e, 0x00, 0x00, 
  0x1f, 0x07, 0xc1, 0xf0, 0x7c, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 
  0xf8, 0x3f, 0xff, 0x83, 0xff, 0x03, 0xe0, 0xf8, 0x3e, 0x00, 0x00, 0x1f, 0x07, 0xc1, 0xf0, 0x7c, 
  0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0xf8, 0x3f, 0xff, 0x83, 0xff, 
  0x03, 0xe0, 0xf8, 0x3e, 0x00, 0x00, 0x1f, 0x07, 0xc1, 0xf0, 0x7c, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 
  0x00, 0x00, 0x01, 0xf0, 0x00, 0x00, 0xf8, 0x3f, 0xff, 0x83, 0xff, 0x03, 0xe0, 0xf8, 0x3e, 0x00, 
  0x00, 0x1f, 0x07, 0xc1, 0xf0, 0x7c, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0x83, 
  0xe0, 0x07, 0xc0, 0x00, 0x7c, 0x1f, 0x03, 0xe0, 0x00, 0x3e, 0x0f, 0x83, 0xe0, 0x07, 0xc0, 0x0f, 
  0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0x83, 0xe0, 0x07, 0xc0, 0x00, 0x7c, 
  0x1f, 0x03, 0xe0, 0x00, 0x3e, 0x0f, 0x83, 0xe0, 0x07, 0xc0, 0x0f, 0xff, 0xe0, 0xff, 0xc0, 0xff, 
  0xfc, 0x00, 0x00, 0x00, 0x0f, 0x83, 0xe0, 0x07, 0xc0, 0x00, 0x7c, 0x1f, 0x03, 0xe0, 0x00, 0x3e, 
  0x0f, 0x83, 0xe0, 0x07, 0xc0, 0x0f, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x0f, 
  0x83, 0xe0, 0x07, 0xc0, 0x00, 0x7c, 0x1f, 0x03, 0xe0, 0x00, 0x3e, 0x0f, 0x83, 0xe0, 0x07, 0xc0, 
  0x0f, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0x83, 0xe0, 0x07, 0xc0, 0x00, 
  0x7c, 0x1f, 0x03, 0xe0, 0x00, 0x3e, 0x0f, 0x83, 0xe0, 0x07, 0xc0, 0x0f, 0xff, 0xe0, 0xff, 0xc0, 
  0xff, 0xfc, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xe0, 0xff, 0xff, 0xff, 
  0xff, 0xf0, 0x00, 0x00, 0x00, 0x3e, 0x0f, 0x83, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x00, 
  0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 
  0x3e, 0x0f, 0x83, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 
  0x00, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x3e, 0x0f, 0x83, 0xe0, 0xff, 
  0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xe0, 0xff, 0xff, 
  0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x3e, 0x0f, 0x83, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 
  0x00, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 
  0x00, 0x3e, 0x0f, 0x83, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 0x0f, 0xfc, 0x1f, 0x07, 
  0xc0, 0x0f, 0xfc, 0x1f, 0xff, 0xe0, 0xf8, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xc1, 0xf0, 0x7c, 0x1f, 
  0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 0x0f, 0xfc, 0x1f, 0x07, 0xc0, 0x0f, 0xfc, 0x1f, 0xff, 
  0xe0, 0xf8, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xc1, 0xf0, 0x7c, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 
  0xff, 0xc0, 0x0f, 0xfc, 0x1f, 0x07, 0xc0, 0x0f, 0xfc, 0x1f, 0xff, 0xe0, 0xf8, 0x01, 0xf0, 0x7f, 
  0xe0, 0xff, 0xc1, 0xf0, 0x7c, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 0x0f, 0xfc, 0x1f, 
  0x07, 0xc0, 0x0f, 0xfc, 0x1f, 0xff, 0xe0, 0xf8, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xc1, 0xf0, 0x7c, 
  0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 0x0f, 0xfc, 0x1f, 0x07, 0xc0, 0x0f, 0xfc, 0x1f, 
  0xff, 0xe0, 0xf8, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xc1, 0xf0, 0x7c, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x07, 0xc1, 0xf0, 0x00, 0x00, 0x03, 0xff, 0x07, 0xff, 0xff, 
  0x80, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1f, 0x07, 0xc1, 0xf0, 0x00, 0x00, 0x03, 0xff, 0x07, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 
  0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x07, 0xc1, 0xf0, 0x00, 
  0x00, 0x03, 0xff, 0x07, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 
  0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x07, 0xc1, 0xf0, 0x00, 0x00, 0x03, 0xff, 0x07, 0xff, 
  0xff, 0x80, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1f, 0x07, 0xc1, 0xf0, 0x00, 0x00, 0x03, 0xff, 0x07, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 
  0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 
  0x83, 0xff, 0x03, 0xff, 0x00, 0x3e, 0x0f, 0xfc, 0x1f, 0x07, 0xc0, 0x00, 0x7f, 0xe0, 0xff, 0xc0, 
  0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0x83, 0xff, 0x03, 0xff, 0x00, 
  0x3e, 0x0f, 0xfc, 0x1f, 0x07, 0xc0, 0x00, 0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 
  0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0x83, 0xff, 0x03, 0xff, 0x00, 0x3e, 0x0f, 0xfc, 0x1f, 0x07, 
  0xc0, 0x00, 0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0x07, 0xff, 
  0xff, 0x83, 0xff, 0x03, 0xff, 0x00, 0x3e, 0x0f, 0xfc, 0x1f, 0x07, 0xc0, 0x00, 0x7f, 0xe0, 0xff, 
  0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0x83, 0xff, 0x03, 0xff, 
  0x00, 0x3e, 0x0f, 0xfc, 0x1f, 0x07, 0xc0, 0x00, 0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x00, 
  0x01, 0xf0, 0x7f, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x03, 0xff, 
  0x00, 0x3e, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x01, 0xf0, 0x7f, 0xff, 0xf8, 
  0x01, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x03, 0xff, 0x00, 0x3e, 0x0f, 0x80, 0x00, 
  0xff, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x01, 0xf0, 0x7f, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xe0, 0x00, 
  0x00, 0x00, 0x01, 0xf0, 0x03, 0xff, 0x00, 0x3e, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0x00, 0x01, 0xf0, 0x7f, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x03, 
  0xff, 0x00, 0x3e, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x00, 0x01, 0xf0, 0x7f, 0xff, 
  0xf8, 0x01, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x03, 0xff, 0x00, 0x3e, 0x0f, 0x80, 
  0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xf0, 0x7c, 0x00, 
  0xfc, 0x1f, 0xff, 0xc0, 0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 
  0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xf0, 0x7c, 0x00, 0xfc, 0x1f, 0xff, 0xc0, 0x0f, 
  0xff, 0xe0, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 
  0xff, 0xf8, 0x3f, 0xf0, 0x7c, 0x00, 0xfc, 0x1f, 0xff, 0xc0, 0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xf0, 
  0x00, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xf0, 0x7c, 
  0x00, 0xfc, 0x1f, 0xff, 0xc0, 0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0xff, 0xc0, 0xff, 
  0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xf0, 0x7c, 0x00, 0xfc, 0x1f, 0xff, 0xc0, 
  0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xf0, 
  0x7c, 0x00, 0xf8, 0x3f, 0xff, 0x83, 0xff, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0x80, 0x1f, 0x07, 0xc0, 
  0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xf0, 0x7c, 0x00, 0xf8, 0x3f, 0xff, 
  0x83, 0xff, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0x80, 0x1f, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xc0, 
  0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xf0, 0x7c, 0x00, 0xf8, 0x3f, 0xff, 0x83, 0xff, 0x03, 0xe0, 0x00, 
  0x3f, 0xff, 0x80, 0x1f, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 
  0xf0, 0x7c, 0x00, 0xf8, 0x3f, 0xff, 0x83, 0xff, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0x80, 0x1f, 0x07, 
  0xc0, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xf0, 0x7c, 0x00, 0xf8, 0x3f, 
  0xff, 0x83, 0xff, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0x80, 0x1f, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xff, 
  0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xfe, 0x0f, 0xfc, 0x00, 0x07, 0xc0, 0x00, 0x7f, 0xff, 0x03, 0xe0, 
  0x00, 0x3f, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 
  0xfe, 0x0f, 0xfc, 0x00, 0x07, 0xc0, 0x00, 0x7f, 0xff, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0xff, 0xff, 
  0xf8, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xfe, 0x0f, 0xfc, 0x00, 0x07, 
  0xc0, 0x00, 0x7f, 0xff, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xf0, 0x7f, 0xe0, 
  0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xfe, 0x0f, 0xfc, 0x00, 0x07, 0xc0, 0x00, 0x7f, 0xff, 0x03, 
  0xe0, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 
  0xff, 0xfe, 0x0f, 0xfc, 0x00, 0x07, 0xc0, 0x00, 0x7f, 0xff, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0xff, 
  0xff, 0xf8, 0x01, 0xf0, 0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x07, 0xfe, 0x00, 0x03, 0xe0, 
  0xff, 0xfe, 0x00, 0x00, 0x1f, 0xfc, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 
  0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x07, 0xfe, 0x00, 0x03, 0xe0, 0xff, 0xfe, 0x00, 0x00, 0x1f, 
  0xfc, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xff, 
  0xff, 0x07, 0xfe, 0x00, 0x03, 0xe0, 0xff, 0xfe, 0x00, 0x00, 0x1f, 0xfc, 0x1f, 0xf8, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x07, 0xfe, 0x00, 0x03, 
  0xe0, 0xff, 0xfe, 0x00, 0x00, 0x1f, 0xfc, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 
  0x00, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 0x07, 0xfe, 0x00, 0x03, 0xe0, 0xff, 0xfe, 0x00, 0x00, 
  0x1f, 0xfc, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 
  0xfc, 0x00, 0x00, 0x3e, 0x0f, 0xfc, 0x00, 0xff, 0xc0, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xc0, 
  0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xff, 0x80, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x3e, 0x0f, 
  0xfc, 0x00, 0xff, 0xc0, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x0f, 0xff, 0xe0, 0xff, 0xc1, 
  0xff, 0x80, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x3e, 0x0f, 0xfc, 0x00, 0xff, 0xc0, 0x0f, 
  0xfc, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xff, 0x80, 0x1f, 0xff, 0xc0, 
  0xff, 0xfc, 0x00, 0x00, 0x3e, 0x0f, 0xfc, 0x00, 0xff, 0xc0, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x07, 
  0xc0, 0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xff, 0x80, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x3e, 
  0x0f, 0xfc, 0x00, 0xff, 0xc0, 0x0f, 0xfc, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x0f, 0xff, 0xe0, 0xff, 
  0xc1, 0xff, 0x80, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xc1, 
  0xf0, 0x00, 0x1f, 0x03, 0xff, 0x00, 0x3f, 0xff, 0x80, 0x1f, 0x00, 0x3e, 0x0f, 0x80, 0x00, 0xff, 
  0xc0, 0xff, 0xfc, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0x03, 0xff, 
  0x00, 0x3f, 0xff, 0x80, 0x1f, 0x00, 0x3e, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xff, 
  0xfe, 0x00, 0x7f, 0xff, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0x03, 0xff, 0x00, 0x3f, 0xff, 0x80, 0x1f, 
  0x00, 0x3e, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 
  0xc1, 0xf0, 0x00, 0x1f, 0x03, 0xff, 0x00, 0x3f, 0xff, 0x80, 0x1f, 0x00, 0x3e, 0x0f, 0x80, 0x00, 
  0xff, 0xc0, 0xff, 0xfc, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0x03, 
  0xff, 0x00, 0x3f, 0xff, 0x80, 0x1f, 0x00, 0x3e, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xf8, 0x01, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xfc, 0x1f, 0x07, 0xfe, 0x0f, 0x80, 
  0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0x83, 0xff, 
  0xff, 0xff, 0xff, 0x83, 0xff, 0xfc, 0x1f, 0x07, 0xfe, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 
  0xe0, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 
  0xfc, 0x1f, 0x07, 0xfe, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xff, 
  0xff, 0xf8, 0x01, 0xff, 0x83, 0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xfc, 0x1f, 0x07, 0xfe, 0x0f, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0x83, 
  0xff, 0xff, 0xff, 0xff, 0x83, 0xff, 0xfc, 0x1f, 0x07, 0xfe, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x00, 
  0x7f, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xff, 0xc0, 0x00, 0x7f, 0xe0, 0x00, 0x01, 0xff, 0x83, 
  0xe0, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x3e, 0x00, 0x03, 0xff, 0xff, 0xc0, 0xff, 
  0xfc, 0x00, 0xff, 0xc0, 0x00, 0x7f, 0xe0, 0x00, 0x01, 0xff, 0x83, 0xe0, 0x00, 0x00, 0xf8, 0x00, 
  0x00, 0x00, 0x1f, 0xf8, 0x3e, 0x00, 0x03, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xff, 0xc0, 0x00, 
  0x7f, 0xe0, 0x00, 0x01, 0xff, 0x83, 0xe0, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x3e, 
  0x00, 0x03, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xff, 0xc0, 0x00, 0x7f, 0xe0, 0x00, 0x01, 0xff, 
  0x83, 0xe0, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x3e, 0x00, 0x03, 0xff, 0xff, 0xc0, 
  0xff, 0xfc, 0x00, 0xff, 0xc0, 0x00, 0x7f, 0xe0, 0x00, 0x01, 0xff, 0x83, 0xe0, 0x00, 0x00, 0xf8, 
  0x00, 0x00, 0x00, 0x1f, 0xf8, 0x3e, 0x00, 0x03, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 
  0x0f, 0xff, 0xff, 0xf8, 0x3f, 0xf0, 0x7c, 0x00, 0xff, 0xe0, 0xff, 0xff, 0xff, 0x83, 0xe0, 0xff, 
  0xff, 0xff, 0x83, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xf8, 0x3f, 
  0xf0, 0x7c, 0x00, 0xff, 0xe0, 0xff, 0xff, 0xff, 0x83, 0xe0, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 
  0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xf8, 0x3f, 0xf0, 0x7c, 0x00, 0xff, 0xe0, 
  0xff, 0xff, 0xff, 0x83, 0xe0, 0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 
  0xc0, 0x0f, 0xff, 0xff, 0xf8, 0x3f, 0xf0, 0x7c, 0x00, 0xff, 0xe0, 0xff, 0xff, 0xff, 0x83, 0xe0, 
  0xff, 0xff, 0xff, 0x83, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xf8, 
  0x3f, 0xf0, 0x7c, 0x00, 0xff, 0xe0, 0xff, 0xff, 0xff, 0x83, 0xe0, 0xff, 0xff, 0xff, 0x83, 0xff, 
  0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0x83, 0xe0, 0xff, 
  0xe0, 0x07, 0xff, 0xf0, 0x7c, 0x00, 0x07, 0xc1, 0xff, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 
  0xf8, 0x3e, 0x00, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0x83, 0xe0, 0xff, 0xe0, 0x07, 0xff, 0xf0, 0x7c, 
  0x00, 0x07, 0xc1, 0xff, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 
  0x00, 0x3f, 0xff, 0x83, 0xe0, 0xff, 0xe0, 0x07, 0xff, 0xf0, 0x7c, 0x00, 0x07, 0xc1, 0xff, 0x80, 
  0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0x83, 0xe0, 
  0xff, 0xe0, 0x07, 0xff, 0xf0, 0x7c, 0x00, 0x07, 0xc1, 0xff, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 
  0x00, 0xf8, 0x3e, 0x00, 0x03, 0xe0, 0x00, 0x3f, 0xff, 0x83, 0xe0, 0xff, 0xe0, 0x07, 0xff, 0xf0, 
  0x7c, 0x00, 0x07, 0xc1, 0xff, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xff, 0xff, 0xff, 
  0xe0, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xfc, 0x1f, 0x00, 0x3e, 0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xff, 
  0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0x00, 0x03, 
  0xff, 0xfc, 0x1f, 0x00, 0x3e, 0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0xff, 
  0xfc, 0x1f, 0x07, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xfc, 0x1f, 0x00, 0x3e, 
  0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xff, 0xff, 
  0xff, 0xe0, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xfc, 0x1f, 0x00, 0x3e, 0x0f, 0xff, 0xe0, 0xff, 0xc1, 
  0xff, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc0, 0x00, 
  0x03, 0xff, 0xfc, 0x1f, 0x00, 0x3e, 0x0f, 0xff, 0xe0, 0xff, 0xc1, 0xff, 0xff, 0xe0, 0xff, 0xc0, 
  0xff, 0xfc, 0x1f, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xe0, 0xff, 0xe0, 0xf8, 
  0x01, 0xf0, 0x03, 0xff, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xc0, 
  0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xe0, 0xff, 0xe0, 0xf8, 0x01, 0xf0, 0x03, 0xff, 0x00, 
  0x3e, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xfe, 
  0x00, 0x7f, 0xe0, 0xff, 0xe0, 0xf8, 0x01, 0xf0, 0x03, 0xff, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xff, 
  0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xc0, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xe0, 0xff, 0xe0, 
  0xf8, 0x01, 0xf0, 0x03, 0xff, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 
  0xc0, 0x00, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x7f, 0xe0, 0xff, 0xe0, 0xf8, 0x01, 0xf0, 0x03, 0xff, 
  0x00, 0x3e, 0x00, 0x00, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xfe, 0x0f, 0x80, 0x00, 0x07, 
  0xc0, 0x0f, 0xfc, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0x83, 0xff, 0xff, 0xc1, 0xff, 0xfc, 0x00, 
  0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xfe, 0x0f, 0x80, 0x00, 0x07, 0xc0, 0x0f, 0xfc, 0x1f, 0xfc, 
  0x00, 0x00, 0x00, 0x0f, 0x83, 0xff, 0xff, 0xc1, 0xff, 0xfc, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 
  0x07, 0xfe, 0x0f, 0x80, 0x00, 0x07, 0xc0, 0x0f, 0xfc, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0x83, 
  0xff, 0xff, 0xc1, 0xff, 0xfc, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xfe, 0x0f, 0x80, 0x00, 
  0x07, 0xc0, 0x0f, 0xfc, 0x1f, 0xfc, 0x00, 0x00, 0x00, 0x0f, 0x83, 0xff, 0xff, 0xc1, 0xff, 0xfc, 
  0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x07, 0xfe, 0x0f, 0x80, 0x00, 0x07, 0xc0, 0x0f, 0xfc, 0x1f, 
  0xfc, 0x00, 0x00, 0x00, 0x0f, 0x83, 0xff, 0xff, 0xc1, 0xff, 0xfc, 0x00, 0xff, 0xc0, 0xff, 0xfc, 
  0x1f, 0x00, 0x3e, 0x00, 0x7c, 0x1f, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0xff, 0xe0, 0x07, 0xff, 0xf0, 
  0x7c, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x3e, 0x00, 0x7c, 
  0x1f, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0xff, 0xe0, 0x07, 0xff, 0xf0, 0x7c, 0x00, 0x00, 0x00, 0x00, 
  0x7c, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x3e, 0x00, 0x7c, 0x1f, 0xff, 0xc1, 0xf0, 0x00, 
  0x1f, 0xff, 0xe0, 0x07, 0xff, 0xf0, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0xff, 0xc0, 0xff, 
  0xfc, 0x1f, 0x00, 0x3e, 0x00, 0x7c, 0x1f, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0xff, 0xe0, 0x07, 0xff, 
  0xf0, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x3e, 0x00, 
  0x7c, 0x1f, 0xff, 0xc1, 0xf0, 0x00, 0x1f, 0xff, 0xe0, 0x07, 0xff, 0xf0, 0x7c, 0x00, 0x00, 0x00, 
  0x00, 0x7c, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0x07, 0xfe, 0x0f, 0x83, 0xe0, 0xff, 0xfe, 0x0f, 0xff, 0xe0, 0xff, 0xc0, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 
  0xfe, 0x0f, 0x83, 0xe0, 0xff, 0xfe, 0x0f, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xfe, 0x0f, 0x83, 0xe0, 0xff, 
  0xfe, 0x0f, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x07, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xfe, 0x0f, 0x83, 0xe0, 0xff, 0xfe, 0x0f, 0xff, 0xe0, 0xff, 
  0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0x07, 0xfe, 0x0f, 0x83, 0xe0, 0xff, 0xfe, 0x0f, 0xff, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x7c, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0xff, 0xff, 0x00, 0x3f, 0xf0, 0x7c, 0x00, 
  0xf8, 0x3e, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 
  0x01, 0xff, 0x80, 0x00, 0xff, 0xff, 0x00, 0x3f, 0xf0, 0x7c, 0x00, 0xf8, 0x3e, 0x0f, 0x80, 0x00, 
  0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0xff, 
  0xff, 0x00, 0x3f, 0xf0, 0x7c, 0x00, 0xf8, 0x3e, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 
  0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x01, 0xff, 0x80, 0x00, 0xff, 0xff, 0x00, 0x3f, 0xf0, 0x7c, 
  0x00, 0xf8, 0x3e, 0x0f, 0x80, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 
  0x00, 0x01, 0xff, 0x80, 0x00, 0xff, 0xff, 0x00, 0x3f, 0xf0, 0x7c, 0x00, 0xf8, 0x3e, 0x0f, 0x80, 
  0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7f, 0xe0, 0x00, 0x3f, 0xf0, 0x7c, 0x1f, 
  0xfc, 0x00, 0x07, 0xc1, 0xf0, 0x7f, 0xe0, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0xff, 0xfc, 
  0x1f, 0xff, 0xff, 0xf0, 0x7f, 0xe0, 0x00, 0x3f, 0xf0, 0x7c, 0x1f, 0xfc, 0x00, 0x07, 0xc1, 0xf0, 
  0x7f, 0xe0, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7f, 
  0xe0, 0x00, 0x3f, 0xf0, 0x7c, 0x1f, 0xfc, 0x00, 0x07, 0xc1, 0xf0, 0x7f, 0xe0, 0xff, 0xfe, 0x00, 
  0x7f, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7f, 0xe0, 0x00, 0x3f, 0xf0, 0x7c, 
  0x1f, 0xfc, 0x00, 0x07, 0xc1, 0xf0, 0x7f, 0xe0, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0xff, 
  0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7f, 0xe0, 0x00, 0x3f, 0xf0, 0x7c, 0x1f, 0xfc, 0x00, 0x07, 0xc1, 
  0xf0, 0x7f, 0xe0, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 
  0x7c, 0x1f, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x03, 0xff, 0x00, 0x3f, 0xf0, 0x03, 0xe0, 0x00, 0x00, 
  0x00, 0x03, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x1f, 0x00, 0x3f, 0xff, 
  0x80, 0x00, 0x03, 0xff, 0x00, 0x3f, 0xf0, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 
  0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x1f, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x03, 0xff, 0x00, 
  0x3f, 0xf0, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 
  0xf0, 0x7c, 0x1f, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x03, 0xff, 0x00, 0x3f, 0xf0, 0x03, 0xe0, 0x00, 
  0x00, 0x00, 0x03, 0xff, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x1f, 0x00, 0x3f, 
  0xff, 0x80, 0x00, 0x03, 0xff, 0x00, 0x3f, 0xf0, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 
  0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0xff, 
  0x07, 0xff, 0xff, 0x80, 0x00, 0xf8, 0x3e, 0x0f, 0xfc, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 
  0x01, 0xf0, 0x7c, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x07, 0xff, 0xff, 0x80, 0x00, 
  0xf8, 0x3e, 0x0f, 0xfc, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x00, 0xff, 
  0xc0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x07, 0xff, 0xff, 0x80, 0x00, 0xf8, 0x3e, 0x0f, 0xfc, 0x00, 
  0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x1f, 0xff, 
  0xff, 0x07, 0xff, 0xff, 0x80, 0x00, 0xf8, 0x3e, 0x0f, 0xfc, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 
  0x00, 0x01, 0xf0, 0x7c, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0x07, 0xff, 0xff, 0x80, 
  0x00, 0xf8, 0x3e, 0x0f, 0xfc, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x1f, 
  0xff, 0xfe, 0x00, 0x7c, 0x00, 0xfc, 0x1f, 0xf8, 0x3f, 0xf0, 0x7f, 0xff, 0x07, 0xc1, 0xf0, 0x03, 
  0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x1f, 0xff, 0xfe, 0x00, 0x7c, 0x00, 
  0xfc, 0x1f, 0xf8, 0x3f, 0xf0, 0x7f, 0xff, 0x07, 0xc1, 0xf0, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 
  0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x1f, 0xff, 0xfe, 0x00, 0x7c, 0x00, 0xfc, 0x1f, 0xf8, 0x3f, 0xf0, 
  0x7f, 0xff, 0x07, 0xc1, 0xf0, 0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 
  0x1f, 0xff, 0xfe, 0x00, 0x7c, 0x00, 0xfc, 0x1f, 0xf8, 0x3f, 0xf0, 0x7f, 0xff, 0x07, 0xc1, 0xf0, 
  0x03, 0xe0, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0x00, 0x01, 0xf0, 0x7c, 0x1f, 0xff, 0xfe, 0x00, 0x7c, 
  0x00, 0xfc, 0x1f, 0xf8, 0x3f, 0xf0, 0x7f, 0xff, 0x07, 0xc1, 0xf0, 0x03, 0xe0, 0xff, 0xc0, 0xff, 
  0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7c, 0x1f, 0x07, 0xc0, 0x0f, 0xff, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 
  0xff, 0x83, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 
  0x7c, 0x1f, 0x07, 0xc0, 0x0f, 0xff, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xff, 0x83, 0xe0, 0x00, 0x00, 
  0x00, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7c, 0x1f, 0x07, 0xc0, 0x0f, 
  0xff, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xff, 0x83, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 
  0xff, 0xfc, 0x1f, 0xff, 0xff, 0xf0, 0x7c, 0x1f, 0x07, 0xc0, 0x0f, 0xff, 0xff, 0xfc, 0x00, 0xf8, 
  0x3f, 0xff, 0x83, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x0f, 0xff, 0xff, 
  0xf0, 0x7c, 0x1f, 0x07, 0xc0, 0x0f, 0xff, 0xff, 0xfc, 0x00, 0xf8, 0x3f, 0xff, 0x83, 0xe0, 0x00, 
  0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0xff, 0xc1, 
  0xf0, 0x03, 0xff, 0x03, 0xff, 0x07, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc1, 0xff, 0xfc, 0x00, 0xff, 
  0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0xff, 0xc1, 0xf0, 0x03, 0xff, 0x03, 0xff, 
  0x07, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc1, 0xff, 0xfc, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 
  0x00, 0x00, 0x7c, 0x00, 0xff, 0xc1, 0xf0, 0x03, 0xff, 0x03, 0xff, 0x07, 0xff, 0xff, 0xff, 0xe0, 
  0xff, 0xc1, 0xff, 0xfc, 0x00, 0xff, 0xc0, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0xff, 
  0xc1, 0xf0, 0x03, 0xff, 0x03, 0xff, 0x07, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc1, 0xff, 0xfc, 0x00, 
  0xff, 0xc0, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0xff, 0xc1, 0xf0, 0x03, 0xff, 0x03, 
  0xff, 0x07, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xc1, 0xff, 0xfc, 0x00, 0xff, 0xc0, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0
};





void setup() 
{
  tft.begin();
  tft.fillScreen(ILI9341_BLACK);
  
 
   Serial.begin(9600);
  delay(10);
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");  
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  //  WiFiManager wifiManager;
  //  wifiManager.setTimeout(180);    
  //  wifiManager.resetSettings();    
   // if(!wifiManager.autoConnect("Aquarium")) 
  //  {
    //  Serial.println("Failed to connect and hit timeout");
    //  delay(3000);
    //  ESP.reset();
   //   delay(5000);
   // }
   // WiFi.printDiag(Serial);
   // Serial.println();
   // Serial.println("connected...OK");  


    
  show();

  while (!Serial && (millis() <= 1000));
  ts.begin();
  ts.setRotation(1);
  
  tft.setRotation(1);
  tft.setCursor(75, 155);
  tft.setTextColor(TFT_WHITE);  tft.setTextSize(2);


  //data on display



    if(power == "checked"){
      tft.drawBitmap(210, 170, bitmap_light, 50, 50, TFT_light);
      tft.setCursor(223, 225);
      tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
      tft.println("Light");
    }else {
      tft.drawBitmap(210, 170, bitmap_light, 50, 50, TFT_DARKGREY);
      tft.setCursor(223, 225);
      tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
      tft.println("Light");
      }

    //app
      tft.drawBitmap(130, 170, bitmap_app, 50, 50, TFT_fan);
      tft.setCursor(135, 225);
      tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
      tft.println("QR Code");
      

  configTime(timezone, dst, "pool.ntp.org", "time.nist.gov"); //ดึงเวลาจาก Server
  Serial.println("\nLoading time");
    while (!time(nullptr)) {
     Serial.print(".");
    delay(1000);
  }
  
}

void loop(void) {

  tft.setRotation(1);

  status_display();  

  if (ts.touched()) {
    TS_Point p = ts.getPoint();
    Serial.print("Pressure = ");
    Serial.print(p.z);
    Serial.print(", x = ");
    px = p.x;
    Serial.print(p.x);
    Serial.print(", y = ");
    py = p.y;
    Serial.print(p.y);
    delay(30);
    Serial.println();
    delay(1000);
    
       
       if((2900<px and px < 3200 and 3100 <py and py < 3600)){
          
          servo();  
      }
    
      if((1200<px and px < 1400 and 3100 <py and py < 3600)){
          Serial.println("change light");
       if (power =="checked"){
              power_send = "false";
              false_light();
          }else{
              power_send = "checked";
              true_light();
          }
  WiFiClient client;
  const int httpPort = 80;
  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
  String url = "/project/sendlight.php?light=";      //ชุด Directory ที่เก็บไฟล์ และตัวแปรที่ต้องการจะฝาก
  url += power_send;                          //ส่งค่าตัวแปร
  Serial.print("Requesting URL: ");
  Serial.println(url);
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
  unsigned long timeout = millis();
  while (client.available() == 0) {
    if (millis() - timeout > 5000) {
      Serial.println(">>> Client Timeout !");
      client.stop();
      return;
    }
  }
  while(client.available()){
    String line = client.readStringUntil('\r');
    Serial.print(line);
  }
  Serial.println();
  Serial.println("closing connection");
  
       }

       if((2000<px and px < 2400 and 2900 <py and py < 3400)){ 
          qrcode();
       }
       

      }else{ // no touch
        show();

       delay(1000);
       //reload icon


      tft.fillRect(210, 180, 50, 40, 0x0000); //0x0000

      tft.drawBitmap(55, 180, bitmap_fan, 40, 40, TFT_WHITE);

    if(power == "checked"){
      tft.drawBitmap(210, 170, bitmap_light, 50, 50, TFT_light);
      tft.setCursor(223, 225);
      tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
      tft.println("Light");
    }else {
      tft.drawBitmap(210, 170, bitmap_light, 50, 50, TFT_DARKGREY);
      tft.setCursor(223, 225);
      tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
      tft.println("Light");
      }
      // data 
          tft.fillRect(10, 23, 300, 20,0x0000); 
          
          tft.setCursor(55, 25);
          tft.setTextColor(TFT_SKYBLUE );  tft.setTextSize(2);
          tft.print(gettemp);
          tft.setTextColor(TFT_SKYBLUE );  tft.setTextSize(1);
          tft.print(" C ");
          tft.setTextColor(TFT_SKYBLUE );  tft.setTextSize(2);
          
          int ftemp =  (gettemp.toInt() *1.8)+32;
          tft.print(ftemp);
          tft.setTextColor(TFT_SKYBLUE );  tft.setTextSize(1);
          tft.println(" F ");
         
          
    
          tft.setCursor(242, 25);
          tft.setTextColor(TFT_SKYBLUE );  tft.setTextSize(2);
          if (getauto =="true"){
              String time_feed = "on";
              tft.print(time_feed);
          }else{
               String time_feed = "off";
             tft.print(time_feed);
           }
     
          tft.fillRect(30, 72, 260, 22,0x0000); //0x0000
          
          tft.setCursor(35, 75);
          tft.setTextColor(TFT_SKYBLUE );  tft.setTextSize(2);
          tft.println(getlevel); 

          tft.setCursor(135, 75);
          tft.setTextColor(TFT_SKYBLUE );  tft.setTextSize(2);
          tft.println(getquality);

          tft.setCursor(236, 75);
          tft.setTextColor(TFT_SKYBLUE );  tft.setTextSize(2);
          tft.print(getpump);

          tft.fillRect(100, 130, 130, 20,0x0000); 
          
          tft.setCursor(105, 135);
          tft.setTextColor(TFT_SKYBLUE );  tft.setTextSize(1);
          tft.println(getfeed); 
      }
    } //end void loop

void show(){
  Serial.begin(9600);
  //feed
if ((WiFiMulti.run() == WL_CONNECTED)) {
    WiFiClient client;
    HTTPClient http;
    if (http.begin(client, "http://192.168.137.1/project/readfeed.php")) {  // HTTP
      int httpCode = http.GET();
      if (httpCode > 0) {
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
          String payload = http.getString();
          getfeed = payload;
          Serial.println(getfeed);
        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }
      http.end();
    } 
  }
  delay(1000);


  // auto
    if ((WiFiMulti.run() == WL_CONNECTED)) {
    WiFiClient client;
    HTTPClient http;
    if (http.begin(client, "http://192.168.137.1/project/readauto.php")) {  // HTTP
      int httpCode = http.GET();
      if (httpCode > 0) {
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
          String payload = http.getString();
          getauto = payload;
          Serial.println(getauto);
        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }
      http.end();
    } 
  }
    delay(1000);
    
//power
if ((WiFiMulti.run() == WL_CONNECTED)) {
    WiFiClient client;
    HTTPClient http;
    if (http.begin(client, "http://192.168.137.1/project/readlight.php")) {  // HTTP
      int httpCode = http.GET();
      if (httpCode > 0) {
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
          String payload = http.getString();
          power = payload;
          Serial.println(power);
        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }
      http.end();
    } 
  }
  delay(1000);

  
if ((WiFiMulti.run() == WL_CONNECTED)) {
    WiFiClient client;
    HTTPClient http;
    if (http.begin(client, "http://192.168.137.1/project/readquality.php")) {  // HTTP
      int httpCode = http.GET();
      if (httpCode > 0) {
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
          String payload = http.getString();
          getquality = payload;
          Serial.println(getquality);
        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }
      http.end();
    } 
  }
  delay(1000);

//load datax  
   if ((WiFiMulti.run() == WL_CONNECTED)) {
    WiFiClient client;
    HTTPClient http;
    if (http.begin(client, "http://192.168.137.1/project/readdatax.php")) {  // HTTP
      int httpCode = http.GET();
      if (httpCode > 0) {
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
          String datax = http.getString();
          Serial.println(datax + datax.length());
          String getflow;
          float qua;
int firstComma = datax.indexOf(',');
int secondComma = datax.indexOf(',', firstComma +1);
int thirdComma = datax.indexOf(',', secondComma +1);
int fourthComma = datax.indexOf(',', thirdComma +1);
int fifthComma = datax.indexOf(',', fourthComma +1);
gettemp = datax.substring(0, firstComma);
getlevel = datax.substring(firstComma +1, secondComma);
gettext = datax.substring(secondComma +1,thirdComma);
getpump = datax.substring(thirdComma +1,fourthComma);
getflow = datax.substring(fourthComma +1);


        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }
      http.end();
    } 
  }
  delay(1000);

}

void servo(){
  Serial.println("feed");
  Serial.println("servo send working");

  WiFiClient client;
  const int httpPort = 80;
  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
  String url = "/project/sendservo.php?servo=";      //ชุด Directory ที่เก็บไฟล์ และตัวแปรที่ต้องการจะฝาก
  url += "1";                          //ส่งค่าตัวแปร
  Serial.print("Requesting URL: ");
  Serial.println(url);
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
  unsigned long timeout = millis();
  while (client.available() == 0) {
    if (millis() - timeout > 5000) {
      Serial.println(">>> Client Timeout !");
      client.stop();
      return;
    }
  }
  while(client.available()){
    String line = client.readStringUntil('\r');
    Serial.print(line);
  }
  Serial.println();
  Serial.println("closing connection");

send_time();
}
void send_time(){
  
   Serial.begin(9600);
   time_t now = time(nullptr);
   struct tm* p_tm = localtime(&now);
  String datenow;
  String hournow;
  String minitenow;
  String secnow;

  if(p_tm->tm_hour < 10){
   hournow ="0"+ String(p_tm->tm_hour);
    }else{
       hournow = String(p_tm->tm_hour);
   }
   if(p_tm->tm_min < 10){
   minitenow ="0"+ String(p_tm->tm_min);
    }else{
         minitenow = String(p_tm->tm_min);
      }
   if(p_tm->tm_sec < 10){
   secnow ="0"+ String(p_tm->tm_sec);
    }else{
         secnow = String(p_tm->tm_sec);
      }
         if(p_tm->tm_mday < 10){
   datenow ="0"+ String(p_tm->tm_mday);
    }else{
         datenow = String(p_tm->tm_mday);
      }
   Serial.print(hournow);
   Serial.print(":");
   Serial.print(minitenow);
   Serial.print(":");
   Serial.println(secnow);
//date
   Serial.print(datenow);
   Serial.print("-");
   Serial.print(month_name[(p_tm->tm_mon)]);
   Serial.print("-");
   Serial.println(p_tm->tm_year + 2443-543);
   delay(1000);
   String x = (month_name[(p_tm->tm_mon)]);
   String y = String(p_tm->tm_year + 2443-543);
   String xy =hournow+":"+minitenow+":"+secnow;
   String z = datenow+"-"+x+"-"+y+"/";

//timer_date =  String(datenow+"-"+ String(month_name[(p_tm->tm_mon)]) +"-"+String(p_tm->tm_year + 2443-543)+ " "+ hournow+":"+minitenow +":"+ secnow  );
   //Serial.println("testerx"+timer_date);

 WiFiClient client;
  const int httpPort = 80;
  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
  String url = "/project/sendtime.php?time=";      //ชุด Directory ที่เก็บไฟล์ และตัวแปรที่ต้องการจะฝาก
  url += z+xy;                          //ส่งค่าตัวแปร
  Serial.print("Requesting URL: ");
  Serial.println(url);
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
  unsigned long timeout = millis();
  while (client.available() == 0) {
    if (millis() - timeout > 5000) {
      Serial.println(">>> Client Timeout !");
      client.stop();
      return;
    }
  }
  while(client.available()){
    String line = client.readStringUntil('\r');
    Serial.print(line);
  }
  Serial.println();
  Serial.println("closing connection");



  }

void status_display(){
  tft.setRotation(1);

  //tft.fillRect(225, 0, 90, 25,0x07E0);

  tft.setCursor(75, 50);
  tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
  tft.print("Temperature");
  tft.println();

  tft.setCursor(140, 105);
  tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
  tft.print("Quality  ");


  tft.setCursor(220, 50);
  tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
  tft.print("Time Feeding ");
  
  tft.setCursor(35, 105);
  tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
  tft.print("Water Level ");

  tft.println();
  tft.println();

  tft.setCursor(225, 105);
  tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
  tft.print("Pump status ");
  
  
  tft.setCursor(135, 155);
  tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
  tft.print("Last Feed   ");

  tft.drawBitmap(55, 180, bitmap_fan, 40, 40, TFT_WHITE);
  tft.setCursor(63, 225); 
  tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
  tft.println("Feed");


  tft.drawBitmap(130, 170, bitmap_app, 50, 50, TFT_fan);
  tft.setCursor(135, 225);
  tft.setTextColor(ILI9341_WHITE);  tft.setTextSize(1);
  tft.println("QR Code");
  }


  void false_light(){
      WiFiClient client;
  const int httpPort = 80;
  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
  String url = "/project/sendlightr.php?r=";      //ชุด Directory ที่เก็บไฟล์ และตัวแปรที่ต้องการจะฝาก
  url += "0";                          //ส่งค่าตัวแปร
  Serial.print("Requesting URL: ");
  Serial.println(url);
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
  unsigned long timeout = millis();
  while (client.available() == 0) {
    if (millis() - timeout > 5000) {
      Serial.println(">>> Client Timeout !");
      client.stop();
      return;
    }
  }
  while(client.available()){
    String line = client.readStringUntil('\r');
    Serial.print(line);
  }
  Serial.println();
  Serial.println("closing connection");


  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
  String url2 = "/project/sendlightg.php?g=";      //ชุด Directory ที่เก็บไฟล์ และตัวแปรที่ต้องการจะฝาก
  url2 += "0";                          //ส่งค่าตัวแปร
  Serial.print("Requesting URL: ");
  Serial.println(url2);
  client.print(String("GET ") + url2 + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
  unsigned long timeout2 = millis();
  while (client.available() == 0) {
    if (millis() - timeout2 > 5000) {
      Serial.println(">>> Client Timeout !");
      client.stop();
      return;
    }
  }
  while(client.available()){
    String line = client.readStringUntil('\r');
    Serial.print(line);
  }
  Serial.println();
  Serial.println("closing connection");


  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
  String url3 = "/project/sendlightb.php?b=";      //ชุด Directory ที่เก็บไฟล์ และตัวแปรที่ต้องการจะฝาก
  url3 += "0";                          //ส่งค่าตัวแปร
  Serial.print("Requesting URL: ");
  Serial.println(url3);
  client.print(String("GET ") + url3 + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
  unsigned long timeout3 = millis();
  while (client.available() == 0) {
    if (millis() - timeout3 > 5000) {
      Serial.println(">>> Client Timeout !");
      client.stop();
      return;
    }
  }
  while(client.available()){
    String line = client.readStringUntil('\r');
    Serial.print(line);
  }
  Serial.println();
  Serial.println("closing connection");
  
    }



 void true_light(){
  
     if ((WiFiMulti.run() == WL_CONNECTED)) {
    WiFiClient client;
    HTTPClient http;
    if (http.begin(client, "http://192.168.137.1/project/rgb_r.php")) {  // HTTP
      int httpCode = http.GET();
      if (httpCode > 0) {
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
          String payload = http.getString();
          sumr = payload;
          Serial.println(sumr);
        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }
      http.end();
    } 
  }

     if ((WiFiMulti.run() == WL_CONNECTED)) {
    WiFiClient client;
    HTTPClient http;
    if (http.begin(client, "http://192.168.137.1/project/rgb_g.php")) {  // HTTP
      int httpCode = http.GET();
      if (httpCode > 0) {
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
          String payload = http.getString();
          sumg = payload;
          Serial.println(sumg);
        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }
      http.end();
    } 
  }

     if ((WiFiMulti.run() == WL_CONNECTED)) {
    WiFiClient client;
    HTTPClient http;
    if (http.begin(client, "http://192.168.137.1/project/rgb_b.php")) {  // HTTP
      int httpCode = http.GET();
      if (httpCode > 0) {
        if (httpCode == HTTP_CODE_OK || httpCode == HTTP_CODE_MOVED_PERMANENTLY) {
          String payload = http.getString();
          sumb = payload;
          Serial.println(sumb);
        }
      } else {
        Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
      }
      http.end();
    } 
  }
  
  
  WiFiClient client;
  const int httpPort = 80;
  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
  String url4 = "/project/sendlightr.php?r=";      //ชุด Directory ที่เก็บไฟล์ และตัวแปรที่ต้องการจะฝาก
  url4 += sumr;                          //ส่งค่าตัวแปร
  Serial.print("Requesting URL: ");
  Serial.println(url4);
  client.print(String("GET ") + url4 + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
  unsigned long timeout4 = millis();
  while (client.available() == 0) {
    if (millis() - timeout4 > 5000) {
      Serial.println(">>> Client Timeout !");
      client.stop();
      return;
    }
  }
  while(client.available()){
    String line = client.readStringUntil('\r');
    Serial.print(line);
  }
  Serial.println();
  Serial.println("closing connection");


  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
  String url5 = "/project/sendlightg.php?g=";      //ชุด Directory ที่เก็บไฟล์ และตัวแปรที่ต้องการจะฝาก
  url5 += sumg;                          //ส่งค่าตัวแปร
  Serial.print("Requesting URL: ");
  Serial.println(url5);
  client.print(String("GET ") + url5 + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
  unsigned long timeout5 = millis();
  while (client.available() == 0) {
    if (millis() - timeout5 > 5000) {
      Serial.println(">>> Client Timeout !");
      client.stop();
      return;
    }
  }
  while(client.available()){
    String line = client.readStringUntil('\r');
    Serial.print(line);
  }
  Serial.println();
  Serial.println("closing connection");


  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
  String url6 = "/project/sendlightb.php?b=";      //ชุด Directory ที่เก็บไฟล์ และตัวแปรที่ต้องการจะฝาก
  url6 += sumb;                          //ส่งค่าตัวแปร
  Serial.print("Requesting URL: ");
  Serial.println(url6);
  client.print(String("GET ") + url6 + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
  unsigned long timeout6 = millis();
  while (client.available() == 0) {
    if (millis() - timeout6 > 5000) {
      Serial.println(">>> Client Timeout !");
      client.stop();
      return;
    }
  }
  while(client.available()){
    String line = client.readStringUntil('\r');
    Serial.print(line);
  }
  Serial.println();
  Serial.println("closing connection");
  
  }   

void qrcode(){
  tft.fillScreen(ILI9341_BLACK);
  tft.drawBitmap(50, 20, bitmap_QR, 210, 208, TFT_WHITE);
  delay(10000);
  tft.fillScreen(ILI9341_BLACK);
  tft.setCursor(75, 155);
  tft.setTextColor(TFT_WHITE);  tft.setTextSize(2);
  tft.print(vol);
}
